// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	http "net/http"

	echo "github.com/labstack/echo/v4"

	mock "github.com/stretchr/testify/mock"

	sessions "github.com/gorilla/sessions"
)

// Service is an autogenerated mock type for the API type
type Service struct {
	mock.Mock
}

// StoreTokenInSession provides a mock function with given fields: w, r, userID, sess
func (_m *Service) StoreTokenInSession(w *echo.Response, r *http.Request, userID string, sess *sessions.Session) error {
	ret := _m.Called(w, r, userID, sess)

	var r0 error
	if rf, ok := ret.Get(0).(func(*echo.Response, *http.Request, string, *sessions.Session) error); ok {
		r0 = rf(w, r, userID, sess)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// VerifyPassword provides a mock function with given fields: c, encryptedPassword, inputPassword
func (_m *Service) VerifyPassword(c echo.Context, encryptedPassword string, inputPassword string) error {
	ret := _m.Called(c, encryptedPassword, inputPassword)

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, string, string) error); ok {
		r0 = rf(c, encryptedPassword, inputPassword)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
